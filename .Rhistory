#Compare Links
(links_summary <- trump %>%
mutate(link = ifelse(link==1, "Links", "No Link")) %>%
count(label, link))
ggplot(links_summary, aes(x=label, y=n, fill = link))+
geom_bar(stat = "identity", position = "dodge") +
labs(x = "", y = "Number of tweets", fill = "")
#Compare Hashtag
(hashtag_summary <- trump %>%
mutate(hashtag = ifelse(hashtag==1, "Hashtag", "No Hashtag")) %>%
count(label, hashtag) )
ggplot(hashtag_summary, aes(x=label, y=n, fill = hashtag))+
geom_bar(stat = "identity", position = "dodge") +
labs(x = "", y = "Number of tweets", fill = "")
#Compare Exclamation Points
(exclaim_summary <- trump %>%
mutate(exclamation_point = ifelse(ExclamationEnd==1, "Exclamation Point", "No Exclamation Point")) %>%
count(label, exclamation_point) )
ggplot(exclaim_summary, aes(x=label, y=n, fill = exclamation_point))+
geom_bar(stat = "identity", position = "dodge") +
labs(x = "", y = "Number of tweets", fill = "")
filter(trump, link == 0 & hashtag == 0)
no_link_no_hash <-  filter(trump, link == 0 & hashtag == 0)
table(no_link_no_has$label, no_link_no_hash$quote)
no_link_no_hash <-  filter(trump, link == 0 & hashtag == 0)
table(no_link_no_has$label, no_link_no_hash$quote)
no_link_no_hash <-  filter(trump, link == 0 & hashtag == 0)
table(no_link_no_hash$label, no_link_no_hash$quote)
filter(trump, link == 0 & hashtag == 0, quote ==0 )
nrow(filter(trump, link == 0 & hashtag == 0, quote ==0 ))
no_link_no_hash <-  filter(trump, link == 0 | hashtag == 0)
no_link_no_hash <-  filter(trump, link == 0 | hashtag == 0)
table(no_link_no_hash$label, no_link_no_hash$quote)
no_link_no_hash <-  filter(trump, link == 0 | hashtag == 0)
no_link_no_hash <-  filter(trump, link == 0 | hashtag == 0)
nrow(no_link_no_hash )
no_link_no_hash <-  filter(trump, link == 0 & hashtag == 0)
nrow(no_link_no_hash )
no_link_no_hash <-  filter(trump, link == 0 & hashtag == 0 & quote == 0)
nrow(no_link_no_hash )
nrow(trump)
table(no_link_no_hash$label, no_link_no_hash$quote)
table(no_link_no_hash$label, no_link_no_hash$quote)
table(no_link_no_hash$label, no_link_no_hash$quote)
nrow(trump)
no_link_no_hash <-  filter(trump, link == 0 & hashtag == 0 )
table(no_link_no_hash$label, no_link_no_hash$quote)
select(train, link, hashtag)
#Best Model
nb_mod10 <- naive_bayes(x=select(train, link, hashtag), y=train_labels)
pred_train_10 <- predict(nb_mod10, train)
check_accuracy(pred_train_10, train_labels, "Training")
#Test Data
pred_test_10 <- predict(nb_mod10, test)
check_accuracy(pred_test_10, test_labels, "Test")
check_accuracy <- function(predictions, labels, phase){
confusion_matrix <- table(predictions, labels)
print(confusion_matrix)
accuracy <-  sum(diag(confusion_matrix )) / sum(confusion_matrix)
cat("Accuracy on", phase ,"Data: ", accuracy)
}
#Best Model
nb_mod10 <- naive_bayes(x=select(train, link, hashtag), y=train_labels)
pred_train_10 <- predict(nb_mod10, train)
check_accuracy(pred_train_10, train_labels, "Training")
#Test Data
pred_test_10 <- predict(nb_mod10, test)
check_accuracy(pred_test_10, test_labels, "Test")
#Best Model
nb_mod10 <- naive_bayes(x=select(train, link, quote), y=train_labels)
pred_train_10 <- predict(nb_mod10, train)
check_accuracy(pred_train_10, train_labels, "Training")
#Test Data
pred_test_10 <- predict(nb_mod10, test)
check_accuracy(pred_test_10, test_labels, "Test")
#Best Model
nb_mod10 <- naive_bayes(x=select(train, link, hashtag), y=train_labels)
pred_train_10 <- predict(nb_mod10, train)
check_accuracy(pred_train_10, train_labels, "Training")
#Test Data
pred_test_10 <- predict(nb_mod10, test)
check_accuracy(pred_test_10, test_labels, "Test")
#Best Model
nb_mod10 <- naive_bayes(x=select(train, link, quote), y=train_labels)
pred_train_10 <- predict(nb_mod10, train)
check_accuracy(pred_train_10, train_labels, "Training")
#Test Data
pred_test_10 <- predict(nb_mod10, test)
check_accuracy(pred_test_10, test_labels, "Test")
#Best Model
nb_mod11 <- naive_bayes(x=select(train, link, quote), y=train_labels)
pred_train_11 <- predict(nb_mod11, train)
check_accuracy(pred_train_11, train_labels, "Training")
#Test Data
pred_test_11 <- predict(nb_mod11, test)
check_accuracy(pred_test_11, test_labels, "Test")
#Best Model
nb_mod11 <- naive_bayes(x=select(train, link, quote), y=train_labels)
pred_train_11 <- predict(nb_mod11, train)
check_accuracy(pred_train_11, train_labels, "Training")
#Test Data
pred_test_11 <- predict(nb_mod11, test)
check_accuracy(pred_test_11, test_labels, "Test")
#Best Model
nb_mod10 <- naive_bayes(x=select(train, link, hashtag), y=train_labels)
pred_train_10 <- predict(nb_mod10, train)
check_accuracy(pred_train_10, train_labels, "Training")
#Test Data
pred_test_10 <- predict(nb_mod10, test)
check_accuracy(pred_test_10, test_labels, "Test")
pred_test_11 <- predict(nb_mod11, select(test, link, quote))
check_accuracy(pred_test_11, test_labels, "Test")
pred_test_11 <- predict(nb_mod11, select(test, link, quote))
check_accuracy(pred_test_11, test_labels, "Test")
pred_test_11 <- predict(nb_mod11, select(test, link, quote))
check_accuracy(pred_test_11, test_labels, "Test")
pred_test_11 <- predict(nb_mod11, select(test, link, quote))
check_accuracy(pred_test_11, test_labels, "Test")
#Best Model
nb_mod11 <- naive_bayes(x=select(train, link, quote), y=train_labels)
pred_train_11 <- predict(nb_mod11, train)
check_accuracy(pred_train_11, train_labels, "Training")
#Test Data
pred_test_11 <- predict(nb_mod11, test)
check_accuracy(pred_test_11, test_labels, "Test")
nrow(train)
nrow(test)
nb_mod11 <- naive_bayes(x=select(train, link, quote), y=train_labels)
pred_train_11 <- predict(nb_mod11, train)
check_accuracy(pred_train_11, train_labels, "Training")
#Test Data
#Best Model
nb_mod10 <- naive_bayes(x=select(train, link, hashtag), y=train_labels)
pred_train_10 <- predict(nb_mod10, train)
check_accuracy(pred_train_10, train_labels, "Training")
#Test Data
pred_test_10 <- predict(nb_mod10, test)
check_accuracy(pred_test_10, test_labels, "Test")
#Best Model
nb_mod11 <- naive_bayes(x=select(train, link, quote), y=train_labels)
pred_train_11 <- predict(nb_mod11, train)
check_accuracy(pred_train_11, train_labels, "Training")
#Test Data
pred_test_11 <- predict(nb_mod11, test)
check_accuracy(pred_test_11, test_labels, "Test")
test %>% filter(quote == 0) %>% nrow()
test %>% filter(quote == 1) %>% nrow()
trump %>% filter(quote == 1) %>% nrow()
trump$text
grepl("@", trump_filter$text)
trump_filter[grepl("@", trump_filter$text), "source"]
table(trump_filter[grepl("@", trump_filter$text), "source"])
trump_filter[grepl("#", trump_filter$text), "source"]
table(trump_filter[grepl("#", trump_filter$text), "source"])
nb_mod12 <- naive_bayes(x=select(train, link, quote, hashtag), y=train_labels)
pred_train_12 <- predict(nb_mod12, train)
check_accuracy(pred_train_11, train_labels, "Training")
#Test Data
pred_test_12 <- predict(nb_mod12, test)
check_accuracy(pred_test_12, test_labels, "Test")
nb_mod12 <- naive_bayes(x=select(train, link, quote, hashtag), y=train_labels)
pred_train_12 <- predict(nb_mod12, train)
check_accuracy(pred_train_12, train_labels, "Training")
#Test Data
pred_test_12 <- predict(nb_mod12, test)
check_accuracy(pred_test_12, test_labels, "Test")
nb_mod12 <- naive_bayes(x=select(train, link, quote, hashtag), y=train_labels)
pred_train_12 <- predict(nb_mod12, train)
check_accuracy(pred_train_12, train_labels, "Training")
#Test Data
pred_test_12 <- predict(nb_mod12, test)
check_accuracy(pred_test_12, test_labels, "Test")
nb_mod12 <- naive_bayes(x=select(train, link, quote, hashtag), y=train_labels)
pred_train_12 <- predict(nb_mod12, train)
check_accuracy(pred_train_12, train_labels, "Training")
#Test Data
pred_test_12 <- predict(nb_mod12, test)
check_accuracy(pred_test_12, test_labels, "Test")
#Best Model
nb_mod11 <- naive_bayes(x=select(train, link, quote), y=train_labels)
pred_train_11 <- predict(nb_mod11, train)
check_accuracy(pred_train_11, train_labels, "Training")
#Test Data
pred_test_11 <- predict(nb_mod11, test)
check_accuracy(pred_test_11, test_labels, "Test")
nb_mod13 <- naive_bayes(x=select(train, link, quote), y=train_labels)
pred_train_13 <- predict(nb_mod13, train)
check_accuracy(pred_train_13, train_labels, "Training")
#Test Data
pred_test_13 <- predict(nb_mod11, test)
check_accuracy(pred_test_13, test_labels, "Test")
nb_mod13 <- naive_bayes(x=select(train, link, quote), y=train_labels)
pred_train_13 <- predict(nb_mod13, train)
check_accuracy(pred_train_13, train_labels, "Training")
#Test Data
pred_test_13 <- predict(nb_mod11, test)
check_accuracy(pred_test_13, test_labels, "Test")
#Best Model
nb_mod11 <- naive_bayes(x=select(train, hashtag,  quote), y=train_labels)
pred_train_11 <- predict(nb_mod11, train)
check_accuracy(pred_train_11, train_labels, "Training")
#Test Data
pred_test_11 <- predict(nb_mod11, test)
check_accuracy(pred_test_11, test_labels, "Test")
#Best Model
nb_mod11 <- naive_bayes(x=select(train, hashtag,  quote), y=train_labels)
pred_train_11 <- predict(nb_mod11, train)
check_accuracy(pred_train_11, train_labels, "Training")
#Test Data
pred_test_11 <- predict(nb_mod11, test)
check_accuracy(pred_test_11, test_labels, "Test")
table(trump$label, trump$link)
#Best Model
nb_mod10 <- naive_bayes(x=select(train, link, hashtag), y=train_labels)
pred_train_10 <- predict(nb_mod10, train)
check_accuracy(pred_train_10, train_labels, "Training")
#Test Data
pred_test_10 <- predict(nb_mod10, test)
check_accuracy(pred_test_10, test_labels, "Test")
#Link, Quote, and Hashtag
nb_mod12 <- naive_bayes(x=select(train, link, quote, hashtag), y=train_labels)
pred_train_12 <- predict(nb_mod12, train)
check_accuracy(pred_train_12, train_labels, "Training")
#Test Data
pred_test_12 <- predict(nb_mod12, test)
check_accuracy(pred_test_12, test_labels, "Test")
nb_mod12
nb_mod10
nb_mod12
#Function to Print Confusion Matrix and Calculate Accuracy
check_accuracy <- function(predictions, labels, phase){
confusion_matrix <- table(predictions, labels)
print(confusion_matrix)
accuracy <-  sum(diag(confusion_matrix )) / sum(confusion_matrix)
precision <-  confusion_matrix[2,2] / sum(confusion_matrix[2 , ] )
recall <-  confusion_matrix[2,2] / sum(confusion_matrix[ , 2] )
cat("Accuracy on", phase ,"Data: ", accuracy)
cat("\n Precision on", phase ,"Data: ", precision)
cat("\n Recall on", phase ,"Data: ", recall)
}
#Full Model
#Create model and make predictions on training data
nb_mod <- naive_bayes(x=select(train, -text, -time_posted ), y=train_labels)
#Training Data
pred_train_1 <- predict(nb_mod, train)
check_accuracy(pred_train_1, train_labels, "Training")
#Test
pred_test_1 <- predict(nb_mod, test)
check_accuracy(pred_test_1, test_labels, "Test")
#Model 12: Link, Quote, and Hashtag
nb_mod12 <- naive_bayes(x=select(train, link, quote, hashtag), y=train_labels)
pred_train_12 <- predict(nb_mod12, train)
check_accuracy(pred_train_12, train_labels, "Training")
#Test Data
pred_test_12 <- predict(nb_mod12, test)
check_accuracy(pred_test_12, test_labels, "Test")
#Model 10: Link and Hashtag
nb_mod10 <- naive_bayes(x=select(train, link, hashtag), y=train_labels)
pred_train_10 <- predict(nb_mod10, train)
check_accuracy(pred_train_10, train_labels, "Training")
#Test Data
pred_test_10 <- predict(nb_mod10, test)
check_accuracy(pred_test_10, test_labels, "Test")
#Model with Hashtag and Quote
nb_mod11 <- naive_bayes(x=select(train, hashtag,  quote), y=train_labels)
pred_train_11 <- predict(nb_mod11, train)
check_accuracy(pred_train_11, train_labels, "Training")
#Test Data
pred_test_11 <- predict(nb_mod11, test)
check_accuracy(pred_test_11, test_labels, "Test")
#Model  With Link and Quote
nb_mod13 <- naive_bayes(x=select(train, link, quote), y=train_labels)
pred_train_13 <- predict(nb_mod13, train)
check_accuracy(pred_train_13, train_labels, "Training")
#Test Data
pred_test_13 <- predict(nb_mod11, test)
check_accuracy(pred_test_13, test_labels, "Test")
#Model 9: Drop Quote
drop_quote <- select(train, quote, hashtag,  link)
nb_mod9 <- naive_bayes(x=drop_quote, y=train_labels )
pred_train_9 <- predict(nb_mod9, train)
check_accuracy(pred_train_9, train_labels, "Training")
#Test Data
pred_test_9 <- predict(nb_mod9, test)
check_accuracy(pred_test_9, test_labels, "Test")
#Model 8: Drop Hashtag
drop_hash <- select(train, quote,  link)
nb_mod8 <- naive_bayes(x=drop_hash, y=train_labels )
pred_train_8 <- predict(nb_mod8, train)
check_accuracy(pred_train_8, train_labels, "Training")
#Test Data
pred_test_8 <- predict(nb_mod8, test)
check_accuracy(pred_test_8, test_labels, "Test")
'It looks like we should keep hashtag. '
#Model 7: Drop Exclamation Point
no_exclamation <- select(train, link, hashtag, quote)
nb_mod7 <- naive_bayes(x=no_exclamation, y=train_labels )
#Training Data
pred_train_7 <- predict(nb_mod7, train)
check_accuracy(pred_train_7, train_labels, "Training")
#Test Data
pred_test_7 <- predict(nb_mod7, test)
check_accuracy(pred_test_7, test_labels, "Test")
#Model 6: Drop  Negative Emotions
no_negative <- select(train, -text, -time_posted, -capitalized, -hour
-NumberPositiveEmotions, -Positive, -Negative, - NumberNegativeEmotions )
nb_mod6 <- naive_bayes(x=no_negative, y=train_labels )
#Training Data
pred_train_6 <- predict(nb_mod6, train)
check_accuracy(pred_train_6, train_labels, "Training")
#Test Data
pred_test_6 <- predict(nb_mod6, test)
check_accuracy(pred_test_6, test_labels, "Test")
#Model 5: Drop  Positive Emotions
no_positive <- select(train, -text, -time_posted, -capitalized, -hour
-NumberPositiveEmotions, -Positive )
nb_mod5 <- naive_bayes(x=no_positive, y=train_labels )
#Training Data
pred_train_5 <- predict(nb_mod5, train)
check_accuracy(pred_train_5, train_labels, "Training")
#Test Data
pred_test_5 <- predict(nb_mod5, test)
check_accuracy(pred_test_5, test_labels, "Training")
#Model 4: Drop  Links
no_links <- select(train, -text, -time_posted, -capitalized, -hour, -link)
nb_mod4 <- naive_bayes(x=no_links, y=train_labels)
#Training Data
pred_train_4 <- predict(nb_mod4, train)
check_accuracy(pred_train_4, train_labels, "Training")
#Test
pred_test_4 <- predict(nb_mod4, test)
check_accuracy(pred_test_4, test_labels, "Test")
'
It looks like we should definitely keep links.
'
#Model 3: Drop Time
no_time <- select(train, -text, -time_posted, -capitalized, -hour)
nb_mod3 <- naive_bayes(x=no_time, y=train_labels)
nb_mod3$tables
#Training Data
pred_train_3 <- predict(nb_mod3, train)
check_accuracy(pred_train_3, train_labels, "Training")
#Test
pred_test_3 <- predict(nb_mod3, test)
check_accuracy(pred_test_3, test_labels, "Test")
#Model 2: Drop All Caps Field
no_caps <- select(train, -text, -time_posted, -capitalized )
nb_mod2 <- naive_bayes(x=no_caps, y=train_labels)
#Training Data
pred_train_2<- predict(nb_mod2, train)
check_accuracy(pred_train_2, train_labels, "Training")
#Test
pred_test_2 <- predict(nb_mod2, test)
check_accuracy(pred_test_2, test_labels, "Test")
#Full Model
#Create model and make predictions on training data
nb_mod <- naive_bayes(x=select(train, -text, -time_posted ), y=train_labels)
#Training Data
pred_train_1 <- predict(nb_mod, train)
check_accuracy(pred_train_1, train_labels, "Training")
#Test
pred_test_1 <- predict(nb_mod, test)
check_accuracy(pred_test_1, test_labels, "Test")
#Model 2: Drop All Caps Field
no_caps <- select(train, -text, -time_posted, -capitalized )
nb_mod2 <- naive_bayes(x=no_caps, y=train_labels)
#Training Data
pred_train_2<- predict(nb_mod2, train)
check_accuracy(pred_train_2, train_labels, "Training")
#Test
pred_test_2 <- predict(nb_mod2, test)
check_accuracy(pred_test_2, test_labels, "Test")
#Model 3: Drop Time
no_time <- select(train, -text, -time_posted, -capitalized, -hour)
nb_mod3 <- naive_bayes(x=no_time, y=train_labels)
nb_mod3$tables
#Training Data
pred_train_3 <- predict(nb_mod3, train)
check_accuracy(pred_train_3, train_labels, "Training")
#Test
pred_test_3 <- predict(nb_mod3, test)
check_accuracy(pred_test_3, test_labels, "Test")
eck_accuracy(pred_test_2, test_labels, "Test")
#Model 3: Drop Time
no_time <- select(train, -text, -time_posted, -capitalized, -hour)
nb_mod3 <- naive_bayes(x=no_time, y=train_labels)
nb_mod3$tables
#Training Data
pred_train_3 <- predict(nb_mod3, train)
check_accuracy(pred_train_3, train_labels, "Training")
#Test
pred_test_3 <- predict(nb_mod3, test)
check_accuracy(pred_test_3, test_labels, "Test")
#Model 4: Drop  Links
no_links <- select(train, -text, -time_posted, -capitalized, -hour, -link)
nb_mod4 <- naive_bayes(x=no_links, y=train_labels)
#Training Data
pred_train_4 <- predict(nb_mod4, train)
check_accuracy(pred_train_4, train_labels, "Training")
#Test
pred_test_4 <- predict(nb_mod4, test)
check_accuracy(pred_test_4, test_labels, "Test")
'
It looks like we should definitely keep links.
'
#Model 5: Drop  Positive Emotions
no_positive <- select(train, -text, -time_posted, -capitalized, -hour
-NumberPositiveEmotions, -Positive )
nb_mod5 <- naive_bayes(x=no_positive, y=train_labels )
#Training Data
pred_train_5 <- predict(nb_mod5, train)
check_accuracy(pred_train_5, train_labels, "Training")
#Test Data
pred_test_5 <- predict(nb_mod5, test)
check_accuracy(pred_test_5, test_labels, "Training")
#Model 6: Drop  Negative Emotions
no_negative <- select(train, -text, -time_posted, -capitalized, -hour
-NumberPositiveEmotions, -Positive, -Negative, - NumberNegativeEmotions )
nb_mod6 <- naive_bayes(x=no_negative, y=train_labels )
#Training Data
pred_train_6 <- predict(nb_mod6, train)
check_accuracy(pred_train_6, train_labels, "Training")
#Test Data
pred_test_6 <- predict(nb_mod6, test)
check_accuracy(pred_test_6, test_labels, "Test")
#Model 7: Drop Exclamation Point
no_exclamation <- select(train, link, hashtag, quote)
nb_mod7 <- naive_bayes(x=no_exclamation, y=train_labels )
#Training Data
pred_train_7 <- predict(nb_mod7, train)
check_accuracy(pred_train_7, train_labels, "Training")
#Test Data
pred_test_7 <- predict(nb_mod7, test)
check_accuracy(pred_test_7, test_labels, "Test")
#Model 8: Drop Hashtag
drop_hash <- select(train, quote,  link)
nb_mod8 <- naive_bayes(x=drop_hash, y=train_labels )
pred_train_8 <- predict(nb_mod8, train)
check_accuracy(pred_train_8, train_labels, "Training")
#Test Data
pred_test_8 <- predict(nb_mod8, test)
check_accuracy(pred_test_8, test_labels, "Test")
'It looks like we should keep hashtag. '
#Model 9: Drop Quote
drop_quote <- select(train, quote, hashtag,  link)
nb_mod9 <- naive_bayes(x=drop_quote, y=train_labels )
pred_train_9 <- predict(nb_mod9, train)
check_accuracy(pred_train_9, train_labels, "Training")
#Test Data
pred_test_9 <- predict(nb_mod9, test)
check_accuracy(pred_test_9, test_labels, "Test")
#Model  With Link and Quote
nb_mod13 <- naive_bayes(x=select(train, link, quote), y=train_labels)
pred_train_13 <- predict(nb_mod13, train)
check_accuracy(pred_train_13, train_labels, "Training")
#Test Data
pred_test_13 <- predict(nb_mod11, test)
check_accuracy(pred_test_13, test_labels, "Test")
#Model with Hashtag and Quote
nb_mod11 <- naive_bayes(x=select(train, hashtag,  quote), y=train_labels)
pred_train_11 <- predict(nb_mod11, train)
check_accuracy(pred_train_11, train_labels, "Training")
#Test Data
pred_test_11 <- predict(nb_mod11, test)
check_accuracy(pred_test_11, test_labels, "Test")
#Best Models
#Best Models: 10 & 12
#Model 10: Link and Hashtag
nb_mod10 <- naive_bayes(x=select(train, link, hashtag), y=train_labels)
pred_train_10 <- predict(nb_mod10, train)
check_accuracy(pred_train_10, train_labels, "Training")
#Test Data
pred_test_10 <- predict(nb_mod10, test)
check_accuracy(pred_test_10, test_labels, "Test")
#Model 12: Link, Quote, and Hashtag
nb_mod12 <- naive_bayes(x=select(train, link, quote, hashtag), y=train_labels)
pred_train_12 <- predict(nb_mod12, train)
check_accuracy(pred_train_12, train_labels, "Training")
#Test Data
pred_test_12 <- predict(nb_mod12, test)
check_accuracy(pred_test_12, test_labels, "Test")
#Model 12: Link, Quote, and Hashtag
nb_mod12 <- naive_bayes(x=select(train, link, quote, hashtag), y=train_labels)
pred_train_12 <- predict(nb_mod12, train)
check_accuracy(pred_train_12, train_labels, "Training")
#Test Data
pred_test_12 <- predict(nb_mod12, test)
check_accuracy(pred_test_12, test_labels, "Test")
check_accuracy(pred_test_12, test_labels, "Test")
check_accuracy(pred_test_12, test_labels, "Test")
check_accuracy(pred_test_1, test_labels, "Test")
check_accuracy(pred_test_1, test_labels, "Test")
check_accuracy(pred_test_1, test_labels, "Test")
check_accuracy(pred_test_2, test_labels, "Test")
check_accuracy(pred_test_3, test_labels, "Test")
check_accuracy(pred_test_2, test_labels, "Test")
check_accuracy(pred_test_4, test_labels, "Test")
check_accuracy(pred_test_5, test_labels, "Training")
pred_test_6 <- predict(nb_mod6, test)
check_accuracy(pred_test_6, test_labels, "Test")
check_accuracy(pred_test_7, test_labels, "Test")
check_accuracy(pred_test_8, test_labels, "Test")
check_accuracy(pred_test_9, test_labels, "Test")
check_accuracy(pred_test_13, test_labels, "Test")
pred_test_13 <- predict(nb_mod13, test)
check_accuracy(pred_test_13, test_labels, "Test")
pred_test_11 <- predict(nb_mod11, test)
check_accuracy(pred_test_11, test_labels, "Test")
pred_test_10 <- predict(nb_mod10, test)
check_accuracy(pred_test_10, test_labels, "Test")
pred_test_12 <- predict(nb_mod12, test)
check_accuracy(pred_test_12, test_labels, "Test")
