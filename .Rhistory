#factor
poll_full$MajorParty <- factor(poll_full$MajorParty)
str(poll_full$MajorParty)
glm(MajorParty~.,data = poll_full, family = "binomial")
glm(MajorParty~., data = poll_full, family = "binomial")
names(poll_full
names(poll_full)
glm(MajorParty~.-vote_2008, data = poll_full, family = "binomial")
summary(glm(MajorParty~.-vote_2008, data = poll_full, family = "binomial"))
bigmodel <- glm(MajorParty~.-vote_2008, data = poll_full, family = "binomial"))
bigmodel <- glm(MajorParty~.-vote_2008, data = poll_full, family = "binomial")
summary(stepAIC(bigmodel, scope = list(lower = ~1, upper = ~ .^2), direction = "both"))
library(MASS)
bigmodel <- glm(MajorParty~.-vote_2008, data = poll_full, family = "binomial")
summary(stepAIC(bigmodel, scope = list(lower = ~1, upper = ~ .^2), direction = "both"))
finalmodel <-glm(formula = MajorParty ~ sex + race + party + ideology + party:ideology +
race:party + sex:race + sex:party, family = "binomial", data = poll_full)
summary(finalmodel)
#Make a histogram of the resulting predicted probabilities using ggplot2
predicted <- predict(finalmodl, type = "response")
#Make a histogram of the resulting predicted probabilities using ggplot2
predicted <- predict(finalmodel, type = "response")
ggplot(aes(x=predicted))+
geom_histogram()
library(ggplot2)
ggplot(aes(x=predicted))+
geom_histogram()
predicted <- data.frame(predicted)
View(predicted)
library(ggplot2)
ggplot(data=predicted,aes(x=predicted))+
geom_histogram()+
ggtitle("Histogram of Predicted Probabilities")
range(predicted$predicted)
table(predicted$predicted)
predicted2 <- predict(bigmodel)
predicted2 <- data.frame(predicted2)
range(predicted2)
range(predicted2$predicted2)
predicted2 <- predict(bigmodel,type="response")
predicted2 <- data.frame(predicted2)
range(predicted2$predicted2)
ggplot(data=predicted2, aes(x=predicted2))+
geom_histogram()+
ggtitle("Histogram of Predicted Probabilities")
predicted2 <- predict(bigmodel,type="response")
predicted2 <- data.frame(predicted2)
ggplot(data=predicted2, aes(x=predicted2))+
geom_histogram()+
ggtitle("Histogram of Predicted Probabilities")
ggplot(data=predicted2, aes(x=predicted2))+
geom_histogram()+
ggtitle("Histogram of Predicted Probabilities")+
labs(x="probabilities")
ggplot(data=predicted2, aes(x=predicted2))+
geom_histogram(color = "black", fill = "white")+
ggtitle("Histogram of Predicted Probabilities")+
labs(x="probabilities")
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)
library(tidyverse)
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)
160+9839
161+9839
table(poll_full$MajorParty)
poll_full_filter$vote_2008 <- relevel(poll_full_filter$vote_2008, ref = "john mcCain")
str(poll_full_filter$vote_2008)
poll_full_filter$vote_2008 <- factor(poll_full_filter$vote_2008)
poll_full_filter$vote_2008 <- relevel(poll_full_filter$vote_2008, ref = "john mcCain")
levels(poll$vote_2008)
levels(poll_full_filter$vote2008)
#filtering
library(tidyverse)
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)
poll_full_filter$vote_2008 <- factor(poll_full_filter$vote_2008)
str(poll_full_filter)
str(poll_full_filter$vote_2008)
poll_full_filter$vote_2008 <- relevel(poll_full_filter$vote_2008, ref = "john mcCain")
levels(poll_full_filter$vote2008)
poll_full_filter$vote_2008
levels(poll_full_filter$vote_2008)
glm(vote_2008~., data = poll_full_filter,  family = "binomial")
poll_full_filter$vote_2008
str(poll_full_filter$vote_2008)
glm(vote_2008 ~.-MajorParty, data = poll_full_filter, family = "binomial")
#filtering
library(tidyverse)
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)
#factoring and releveling
poll_full_filter$vote_2008 <- factor(poll_full_filter$vote_2008)
levels(poll_full_filter$vote_2008)
?relevel
levels(poll_full_filter$vote_2008)
poll_full_filter$vote_2008 <- factor(poll_full_filter$vote_2008)
poll_full_filter$vote_2008 <- relvel(poll_full_filter$vote_2008, ref = 'john mcCain')
#factoring and releveling
poll_full_filter$vote_2008 <- factor(poll_full_filter$vote_2008)
poll_full_filter$vote_2008 <- relevel(poll_full_filter$vote_2008, ref = 'john mcCain')
levels(poll_full_filter$vote_2008)
glm(vote_2008 ~. , data = poll_full_filter, family = "binomial")
#factoring and releveling
poll_full_filter$vote_2008 <- factor(poll_full_filter$vote_2008)
poll_full_filter
#factoring and releveling
poll_full_filter$vote_2008 <- factor(poll_full_filter$vote_2008)
levels(poll_full_filter$vote_2008)
#factoring and releveling
poll_full_filter$vote_2008 <- factor(poll_full_filter$vote_2008)
levels(poll_full_filter$vote_2008)
glm(vote_2008 ~. , data = poll_full_filter, family = "binomial")
str(poll_full_filter$vote_2008)
str(poll_full_filter)
#filtering
library(tidyverse)
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)
#factoring and releveling
poll_full_filter$vote_2008 <- factor(poll_full_filter$vote_2008)
levels(poll_full_filter$vote_2008)
glm(vote_2008 ~. , data = poll_full_filter, family = "binomial")
View(poll_full_filter)
is.na(poll_full_filter$vote_2008)
sum(is.na(poll_full_filter$vote_2008))
#filtering
library(tidyverse)
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)
#factoring and releveling
poll_full_filter$vote_2008 <- as.factor(poll_full_filter$vote_2008)
levels(poll_full_filter$vote_2008)
glm(vote_2008 ~. , data = poll_full_filter, family = "binomial")
View(poll_full_filter)
rm(list=ls(()))
rm(list=ls())
library(data.table)
poll<-as.data.frame(fread(file.choose()))
poll <- data.frame(apply(poll,2,function(x) factor(x)))
poll$vote_2008 <- relevel(poll$vote_2008, ref = "john mcCain")
levels(poll$vote_2008)
summary(glm(vote_2008~.,data = poll, family = "binomial"))
#probabilistic predictions into binary predictions
f1 <- glm(vote_2008~.,data = poll, family = "binomial")
predicted <- predict(f1, type = "response")
binarypredictions <- ifelse(predicted > .5, "Obama", "McCain")
table(binarypredictions)
#accuracy
confusion_matrix <- table(binarypredictions, poll$vote_2008)
(confusion_matrix[1,1]+confusion_matrix[2,2])/sum(confusion_matrix)
#precision
(5119)/(823+5119)
#recall
5119/(5119+600)
binarypredictions_new <- ifelse(predicted > .7, "Obama", "McCain")
table(binarypredictions_new)
#accuracy
confusion_matrix_new <- table(binarypredictions_new, poll$vote_2008)
(confusion_matrix_new[1,1]+confusion_matrix_new[2,2])/sum(confusion_matrix)
#precision
(4410)/(4410+398)
#recall
(4410)/(4410+1309)
#read in data
poll_full <- as.data.frame(fread(file.choose()))
rm(list=ls())
#read in data
poll_full <- as.data.frame(fread(file.choose()))
#mutate with if_else to make democrat + republican =1 for major party, other = 0
poll_full$MajorParty <- ifelse(poll_full$vote_2008 == "other", 0, 1)
#factor
poll_full$MajorParty <- factor(poll_full$MajorParty)
library(MASS)
bigmodel <- glm(MajorParty~.-vote_2008, data = poll_full, family = "binomial")
# summary(stepAIC(bigmodel, scope = list(lower = ~1, upper = ~ .^2), direction = "both"))
# finalmodel <-glm(formula = MajorParty ~ sex + race + party + ideology + party:ideology +
#     race:party + sex:race + sex:party, family = "binomial", data = poll_full)
summary(finalmodel)
# #Make a histogram of the resulting predicted probabilities using ggplot2
# predicted <- predict(finalmodel, type = "response")
# predicted <- data.frame(predicted)
#
# #histogram
# library(ggplot2)
# ggplot(data=predicted,aes(x=predicted))+
#   geom_histogram()+
#   ggtitle("Histogram of Predicted Probabilities")
predicted2 <- predict(bigmodel,type="response")
predicted2 <- data.frame(predicted2)
ggplot(data=predicted2, aes(x=predicted2))+
geom_histogram(color = "black", fill = "white")+
ggtitle("Histogram of Predicted Probabilities")+
labs(x="probabilities")
#filtering
library(tidyverse)
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)
str(poll_full$MajorParty)
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)
#filtering
library(tidyverse)
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)%>%
mutate(vote_2008 == as.factor(vote_2008))
#factoring and releveling
poll_full_filter$vote_2008 <- relevel(poll_full_filter$vote_2008, ref = "john mcCain")
#filtering
library(tidyverse)
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)%>%
mutate(vote_2008 == as.factor(vote_2008))
library(tidyverse)
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)%>%
mutate(vote_2008 = as.factor(vote_2008))
#factoring and releveling
poll_full_filter$vote_2008 <- relevel(poll_full_filter$vote_2008, ref = "john mcCain")
levels(poll_full_filter$vote_2008)
glm(vote_2008 ~. , data = poll_full_filter, family = "binomial")
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)%>%
mutate(vote_2008 = as.factor(vote_2008))
poll_full_filter$vote_2008 <- relevel(poll_full_filter$vote_2008, ref = "john mcCain")
levels(poll_full_filter$vote_2008)
glm(vote_2008 ~. , data = poll_full_filter, family = "binomial")
poll_full_filter
str(poll_full_filter)
#filtering
library(tidyverse)
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)%>%
mutate(vote_2008 = as.factor(vote_2008))
#filtering
library(tidyverse)
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)%>%
mutate(vote_2008 = as.factor(vote_2008))
#filtering
library(tidyverse)
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)%>%
mutate(vote_2008 = factor(vote_2008))
str(poll_full_filter)
vote_2008
poll_full_filter$vote_2008
#factoring and releveling
poll_full_filter$vote_2008 <- relevel(poll_full_filter$vote_2008, ref = "john mcCain")
poll_full_filter
poll_full_filter$vote_2008
str(poll_full_filter)
levels(poll_full_filter$vote_2008)
glm(vote_2008 ~., data = poll_full_filter, family = "binomial")
poll_full_filter <- data.frame(apply(poll_full_filter,2,function(x) factor(x)))
poll_full_filter$vote_2008 <- relevel(poll_full_filter$vote_2008, ref = "john mcCain")
levels(poll_full_filter$vote_2008)
glm(vote_2008 ~., data = poll_full_filter, family = "binomial")
glm(vote_2008 ~.-MajorParty, data = poll_full_filter, family = "binomial")
levels(poll_full_filter$state)
levels(poll_full_filter$sex)
levels(poll_full_filter$race)
levels(poll_full_filter$age)
levels(poll_full_filter$education)
levels(poll_full_filter$party)
levels(poll_full_filter$ideology)
levels(poll_full_filter$vote_2008)
levels(poll_full_filter$state_contestedness)
levels(poll_full_filter$MajorParty)
poll_full_filter <- poll_full %>%
filter(MajorParty == 1)%>%
mutate(vote_2008 = factor(vote_2008))%>%
select(-MajorParty)
View(poll_full_filter)
poll_full_filter <- data.frame(apply(poll_full_filter,2,function(x) factor(x)))
poll_full_filter$vote_2008 <- relevel(poll_full_filter$vote_2008, ref = "john mcCain")
levels(poll_full_filter$vote_2008)
glm(vote_2008 ~., data = poll_full_filter, family = "binomial")
filter_mod <- glm(vote_2008 ~., data = poll_full_filter, family = "binomial")
predicted <- predict(filter_mod, type = "response")
predicted <- data.frame(predicted)
ggplot(data=predicted, aes(x=predicted))+
geom_histogram(color = "black", fill = "white")+
ggtitle("Histogram of Predicted Probabilities")+
labs(x="probabilities")
rm(list=ls())
getwd()
library(data.table)
trump <- as.data.frame(fread("trump_data.tsv")
trump <- as.data.frame(fread("trump_data.tsv"))
library(data.table)
trump <- as.data.frame(fread("trump_data.tsv"))
View(trump)
str(trump)
str(trump$`2016-08-08T15:20:44Z`)
?fread
?read.csv
trump <- as.data.frame(fread("trump_data.tsv"), header = FALSE)
View(trump)
library(data.table)
trump <- as.data.frame(fread("trump_data.tsv"), header = FALSE)
View(trump)
library(data.table)
trump <- as.data.frame(fread("trump_data.tsv", header = FALSE))
View(trump)
names(Trump) <- c("source", "time_posted", "text")
names(trump) <- c("source", "time_posted", "text")
nameS(trump)
names(trump)
headeR(trump)
header(trump)
head(trump)
gsub("//D", "", trump$time_posted)
gsub("//D+", "", trump$time_posted)
gsub("//w+", "", trump$time_posted)
gsub("[^0-9]", "", trump$time_posted)
head(trump$time_posted)
gsub("[^0-9//-//:]", "", trump$time_posted)
gsub("[^-0-9//:]", "", trump$time_posted)
head(trump$time_posted)
gsub("[^-0-9//:]", " ", trump$time_posted)
#Clean time
trump$time_posted <- gsub("[^-0-9//:]", " ", trump$time_posted)
head(trump$time_posted)
trump$time_posted <-trimws(trump$time_posted)
head(trump$time_posted)
library(lubridate)
ymd_hms(trump$time_posted)
trump$time_posted <- ymd_hms(trump$time_posted)
str(trump$time_posted)
hour(trump$time_posted)
trump$time_posted <- hour(trump$time_posted)
library(data.table)
library(lubridate)
trump <- as.data.frame(fread("trump_data.tsv", header = FALSE))
names(trump) <- c("source", "time_posted", "text")
#Clean time
trump$time_posted <- gsub("[^-0-9//:]", " ", trump$time_posted)
trump$time_posted <-trimws(trump$time_posted)
trump$time_posted <- ymd_hms(trump$time_posted)
trump$hour <- hour(trump$time_posted)
View(trump)
str(trump$time_posted)
View(trump)
grepl('^"',trump[359])
grepl('^"',trump[359,3])
ifelse(grepl('^"',trump$text), 1, 0)
#Feature 2: Start with Quotation Mark
trump$quote <- ifelse(grepl('^"',trump$text), 1, 0)
View(trump)
library(dplyr)
trump%>%
filter(quote==0)
trump_filter <- trump%>%
filter(quote==0)
#Filtering out non Trump or non staff language
trump_filter <- trump%>%
filter(quote==0)
View(trump)
View(trump_filter)
head(trump$text, 50)
grepl("https://",trump_filter)
grepl("https",trump_filter)
grepl("https",trump_filter$text)
left_join(trump,trump_filter)
X <- left_join(trump,trump_filter)
View(X)
#Feature 3: Contains an Https(proxy for link)
trump_filter$link <- ifelse(grepl("https",trump_filter$text), 1,0)
X <- left_join(trump,trump_filter)
View(X)
rm(X)
View(trump_filter)
#Feature 4: Presence of a hastag
trump_filter$hashtag <- ifelse(grepl("#", trump_filter$text),1,0)
View(trump_filter)
library(data.table)
library(lubridate)
library(dplyr)
trump <- as.data.frame(fread("trump_data.tsv", header = FALSE))
names(trump) <- c("source", "time_posted", "text")
#Clean time
trump$time_posted <- gsub("[^-0-9//:]", " ", trump$time_posted)
trump$time_posted <-trimws(trump$time_posted)
trump$time_posted <- ymd_hms(trump$time_posted)
#Feature 1: Hour of Day
trump$hour <- hour(trump$time_posted)
#Feature 2: Start with Quotation Mark
trump$quote <- ifelse(grepl('^"',trump$text), 1, 0) #if it begins with a quotation mark 1, if not then 0
#Filtering out non Trump or non staff language
trump_filter <- trump%>%
filter(quote==0)
#Feature 3: Contains an Https(proxy for link)
trump_filter$link <- ifelse(grepl("https",trump_filter$text), 1,0)
#Feature 4: Presence of a hastag
trump_filter$hashtag <- ifelse(grepl("#", trump_filter$text),1,0)
ifelse(grepl("[:upper:]"), trump_filter$text, 1, 0)
grepl("[:upper:]", trump_filter$text)
grepl("$[:upper:]", trump_filter$text)
grepl("$[:upper:]", trump_filter$text)
grepl("[A-Z]{2}", trump_filter$text)
grepl("[A-Z]{2}", trump_filter$text)
which(grepl("[A-Z]{2}", trump_filter$text))
head(which(grepl("[A-Z]{2}", trump_filter$text)))
trump_filter$text[head(which(grepl("[A-Z]{2}", trump_filter$text)))]
trump_filter$text[head(which(grepl("\b[A-Z]{2}\b", trump_filter$text)))]
trump_filter$text[head(which(grepl("\b([A-Z]{2})\b", trump_filter$text)))]
trump_filter$text[head(which(grepl("[A-Z][A-Z]", trump_filter$text)))]
trump_filter$text[head(which(grepl("'.*(\\b[A-Z]+\\b).*'", trump_filter$text)))]
trump_filter$text[head(which(grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]+"", trump_filter$text)))]
trump_filter$text[head(which(grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]+"", trump_filter$text")))]
trump_filter$text[head(which(grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]+"", trump_filter$text")))]
trump_filter$text[head(which(grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]"", trump_filter$text")))]
trump_filter$text[head(which(grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]"", trump_filter$text")))]
trump_filter$text[head(which(grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]", trump_filter$text)))]
which(grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]", trump_filter$text))
trump_filter$text[which(grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]", trump_filter$text)) &
grepl("#", trump_filter$text)==F]
grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]", trump_filter$text)
trump_filter$text[grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]", trump_filter$text)==T &
grepl("#", trump_filter$text)==F & grepl("https",trump_filter$text)==F]
trump_filter$text[grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]", trump_filter$text)==T  & grepl("https",trump_filter$text)==F]
trump_filter$text[grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]+ [[:alpha:]][A-Z]+[A-Z][[:alpha:]]", trump_filter$text)]
trump_filter$text[grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]+ [[:alpha:]][A-Z]+[A-Z][[:alpha:]]", trump_filter$text)]
trump_filter$text[grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]+ [[:alpha:]][A-Z]+[A-Z][[:alpha:]]",
trump_filter$text)]
ifelse(grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]+ [[:alpha:]][A-Z]+[A-Z][[:alpha:]]",
trump_filter$text), 1, 0)
trump_filter$capitalized <- ifelse(grepl("[[:alpha:]][A-Z]+[A-Z][[:alpha:]]+ [[:alpha:]][A-Z]+[A-Z][[:alpha:]]",
trump_filter$text), 1, 0)
filter(trump_filter, capitalized == T)
nrow(trump_filter)
sum(trump_filter$capitalized)
tail(trump_filter)
trump_filter$capitalized <- ifelse(grepl("\b[A-Z]{4,}\b",
trump_filter$text), 1, 0)
sum( trump_filter$capitalized)
trump_filter$capitalized <- ifelse(grepl(\b[A-Z]{4,}\b,
trump_filter$text), 1, 0)
trump_filter$capitalized <- ifelse(grepl(\b[A-Z]{4,}\b,
trump_filter$text), 1, 0)
trump_filter$capitalized <-trump_filter$text[grepl("[[alpha]](A-Z){4,}",
trump_filter$text)]
trump_filter$text[grepl("[[alpha]](A-Z){4,}",
trump_filter$text)]
trump_filter$text[grepl("[[alpha]](A-Z){4,}",
trump_filter$text)]
trump_filter$text[grepl("[[alpha]](A-Z){4,}",
trump_filter$text)]
trump_filter$text[grepl("(A-Z){4,}",
trump_filter$text)]
trump_filter$text[grepl("(A-Z)",
trump_filter$text)]
trump_filter$text[grepl("(A-Z)",
trump_filter$text)]
trump_filter$text[grepl("[alpha](A-Z)",
trump_filter$text)]
trump_filter$text[grepl("([[alpha:]](A-Z)",
trump_filter$text)]
trump_filter$text[grepl("[[alpha:]](A-Z)",
trump_filter$text)]
trump_filter$text[grepl("[[:alpha:]](A-Z)",
trump_filter$text)]
trump_filter$text
trump_filter$text[grepl("[:alpha:](A-Z)",
trump_filter$text)]
trump_filter$text[grepl("(A-Z)",
trump_filter$text)]
trump_filter$text[grepl("a",
trump_filter$text)]
trump_filter$text[grepl("A-Z",
trump_filter$text)]
trump_filter$text[grepl("[A-Z]",
trump_filter$text)]
trump_filter$text[grepl("[A-Z]{3,}",
trump_filter$text)]
trump_filter$text[grepl("[A-Z]{4,}",
trump_filter$text)]
trump_filter$text[grep("[A-Z]{4,}",
trump_filter$text)]
trump_filter$text[grep("[:alpha:][A-Z]{4,}",
trump_filter$text)]
trump_filter$text[grep("[:alpha:][A-Z]{4,}",
trump_filter$text)]
trump_filter$text[grepl("[:alpha:][A-Z]{4,}",
trump_filter$text)]
trump_filter$text[grepl("[::alpha::][A-Z]{4,}",
trump_filter$text)]
trump_filter$text[grepl("[A-Z]{4,}",
trump_filter$text)]
trump_filter$text[grepl("[A-Z]{4,}",
trump_filter$text) & grepl("https",trump_filter$text)==F]
trump_filter$capitalized <- ifelse(grepl("[A-Z]{4,}",
trump_filter$text), 1, 0)
sum(trump_filter$capitalized)
sum(filter(trump_filter, capitalized==1 & link ==0))
sum(filter(trump_filter, capitalized==1 )
nrow( filter(trump_filter, capitalized==1 & link = 0))
nrow( filter(trump_filter, capitalized==1 & link == 0))
nrow( filter(trump_filter, capitalized==1 & link == 1))
nrow( filter(trump_filter, capitalized==1 & link == 1))
nrow( filter(trump_filter, capitalized==1 & link == 0))
nrow( filter(trump_filter, capitalized==1 ))
grepl("^!",
trump_filter$text)
ifelse(grepl("!$",
trump_filter$text), 1, 0)
grepl("!$",
trump_filter$text
grepl("!$",trump_filter$text)
grep("!$",trump_filter$text)
trump_filter[grep("!$",trump_filter$text), "text"]
